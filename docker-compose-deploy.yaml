version: "3.1"

services:
    app:
        build:
            context: ./service/app
            dockerfile: Dockerfile.application
        image: scaleflex:lastest
        container_name: scaleflex_app
        volumes:
            - src:/ScaleFlex/
        restart: always
        # ports:
        #     - "8000:8000"
        network_mode: "host"

        command: bash -c "
            cd /ScaleFlex/src/benchmark_pg
            && gunicorn --workers=1 --threads=2 --bind 0.0.0.0:8000 benchmark_pg.wsgi"

    # db:
    #     build:
    #         context: ./service/postgres
    #         dockerfile: Dockerfile.postgres
    #     restart: always
    #     environment:
    #         POSTGRES_PASSWORD: root
    #         POSTGRES_USER: root
    #         PGDATA: /var/lib/postgresql/data

    #     networks:
    #
    #     ports:
    #         - "5432:5432"
    #     volumes:
    #         - db_mount:/var/lib/postgresql/data/
    #         - db_mount_log:/var/log/postgresql/
    #     command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]

    # adminer:
    #     image: adminer
    #     restart: always
    #     ports:
    #         - 2221:8080
    #     network_mode: "host"

    redis:
        image: redis:6.2.6
        restart: always
        network_mode: "host"
    celery:
        image: scaleflex:lastest
        container_name: scaleflex_celery
        depends_on:
            - redis
            - app
        network_mode: "host"
        volumes:
            - src:/ScaleFlex/
        restart: always
        command: bash -c "
                cd /ScaleFlex/src/benchmark_pg
                && celery -A celery_conf worker -l INFO"

    # nginx:
    #     build:
    #         context: ./service/nginx
    #         dockerfile: Dockerfile.nginx
    #     container_name: nginx
    #     ports:
    #         - 2904:80
    #     depends_on:
    #         - app
    #     restart: always
    #     networks:
    #

networks:
    network_BE:
        driver: bridge
    network_BE_DB:
        driver: bridge

volumes:
    src:
        name: src
        driver_opts:
            type: "none"
            device: "/root/benchmark-postgresql/"
            o: bind
    # db_mount:
    #     name: db_mount
    #     driver_opts:
    #         type: "none"
    #         device: "/root/benchmark-postgresql/src/db"
    #         o: bind
    # db_mount_log:
    #     name: db_mount_log
    #     driver_opts:
    #         type: "none"
    #         device: "/root/benchmark-postgresql/src/log/postgresql"
    #         o: bind

# docker-compose -p AVION_WEB up --build